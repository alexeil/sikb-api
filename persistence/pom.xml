<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xmlns="http://maven.apache.org/POM/4.0.0"
		 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<parent>
		<artifactId>sikb-api</artifactId>
		<groupId>sikb</groupId>
		<version>1.0.0-SNAPSHOT</version>
	</parent>
	<modelVersion>4.0.0</modelVersion>

	<artifactId>persistence</artifactId>

	<properties>
		<root.basedir>${basedir}/..</root.basedir>
	</properties>

	<dependencies>
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>common</artifactId>
		</dependency>

		<dependency>
			<groupId>com.fasterxml.jackson.datatype</groupId>
			<artifactId>jackson-datatype-jsr310</artifactId>
		</dependency>

		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
		</dependency>

		<dependency>
			<groupId>org.jooq</groupId>
			<artifactId>jooq</artifactId>
		</dependency>

		<dependency>
			<groupId>org.jooq</groupId>
			<artifactId>jooq-meta</artifactId>
		</dependency>

		<dependency>
			<groupId>org.jooq</groupId>
			<artifactId>jooq-codegen</artifactId>
		</dependency>

	</dependencies>
	<build>
		<plugins>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<executions>
					<execution>
						<goals>
							<goal>test-jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.jooq</groupId>
				<artifactId>jooq-codegen-maven</artifactId>

				<!-- The plugin should hook into the generate goal -->
				<executions>
					<execution>
						<id>jooq-codegen</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>generate</goal>
						</goals>
					</execution>
				</executions>

				<!-- Manage the plugin's dependency. In this example, we'll use a PostgreSQL database -->
				<dependencies>
					<dependency>
						<groupId>org.postgresql</groupId>
						<artifactId>postgresql</artifactId>
						<version>${postgresql.version}</version>
					</dependency>
				</dependencies>

				<!-- Specify the plugin configuration.
                     The configuration format is the same as for the standalone code generator -->
				<configuration>

					<!-- JDBC connection parameters -->
					<jdbc>
						<driver>org.postgresql.Driver</driver>
						<url>jdbc:postgresql:sikb</url>
						<user>postgres</user>
						<password>postgres</password>
					</jdbc>

					<!-- Generator parameters -->
					<generator>
						<database>
							<name>org.jooq.meta.postgres.PostgresDatabase</name>
							<includes>.*</includes>
							<excludes></excludes>
							<!-- In case your database supports catalogs, e.g. SQL Server:
                            <inputCatalog>public</inputCatalog>
                              -->
							<inputSchema>sikb</inputSchema>

							<forcedTypes>
								<forcedType>
									<userType>java.time.LocalDate</userType>
									<converter>com.boschat.sikb.persistence.converter.LocalDateConverter</converter>
									<expression>.*</expression>
									<types>date</types>
								</forcedType>

								<forcedType>
									<userType>java.time.OffsetDateTime</userType>
									<converter>com.boschat.sikb.persistence.converter.LocalDateTimeConverter</converter>
									<expression>.*</expression>
									<types>timestamp</types>
								</forcedType>

								<forcedType>
									<!-- Specify the Java type of your custom type. This corresponds to the Binding's <U> type. -->
									<userType>com.fasterxml.jackson.databind.JsonNode</userType>
									<binding>com.boschat.sikb.persistence.binding.PostgresJSONJacksonJsonNodeBinding</binding>
									<expression>.*</expression>
									<types>jsonb</types>
								</forcedType>

								<forcedType>
									<userType>com.fasterxml.jackson.databind.JsonNode</userType>
									<converter>com.boschat.sikb.persistence.converter.PostgresJSONJacksonJsonNodeConverter</converter>
									<expression>.*</expression>
									<types>jsonb</types>
								</forcedType>
							</forcedTypes>


						</database>

						<generate>
							<pojos>true</pojos>
							<daos>true</daos>
						</generate>

						<target>
							<packageName>com.boschat.sikb</packageName>
							<directory>target/generated-sources/jooq</directory>
						</target>
					</generator>
				</configuration>
			</plugin>
		</plugins>
	</build>
</project>