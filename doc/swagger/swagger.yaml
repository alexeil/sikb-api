openapi: 3.0.0
info:
  title: SIKB-API
  description: |+

  contact:
    name: Fédération Kin-ball France
    url: 'http://kin-ball.fr'
    email: fkbf@kin-ball.fr
  license:
    name: Apache 2.0
    url: 'https://www.apache.org/licenses/LICENSE-2.0'
  version: v1

servers:
  - url: https://sikb-api.herokuapp.com/api/v1
    description: Production URL
  - url: http://localhost/api/v1
    description: Local URL

paths:
  '/clubs':
    get:
      summary: Find all club
      description: ''
      operationId: findClubs
      responses:
        200:
          description: find all clubs
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/club'
        default:
          description: Default error sample response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ZError"
      tags:
        - clubs
    post:
      summary: Create a club
      description: ''
      operationId: createClub
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/clubForCreation'
        required:
          true
        description: body
      responses:
        201:
          description: Newly created club
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/club'
        default:
          description: Default error sample response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ZError"
      tags:
        - clubs
  '/clubs/{clubId}':
    get:
      summary: get a club
      description: ''
      operationId: getClubById
      parameters:
        - $ref: '#/components/parameters/clubId'
      responses:
        200:
          description: get back a club
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/club'
        default:
          description: Default error sample response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ZError"
      tags:
        - clubs
    put:
      summary: Update a club
      description: ''
      operationId: updateClub
      parameters:
        - $ref: '#/components/parameters/clubId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/clubForUpdate'
        required:
          true
        description: body
      responses:
        201:
          description: Newly updated club
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/club'
        default:
          description: Default error sample response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ZError"
      tags:
        - clubs
  '/clubs/:clubId/:season/affiliations':
    summary: tes
    description: test
    get:
      summary: get all affiliations
      description: ''
      operationId: findAffiliations
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ZError"
      tags:
        - affiliations
    post:
      summary: Create an affiliation
      description: ''
      operationId: createAffiliation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AffiliationForCreation'
        required:
          true
        description: body
      responses:
        201:
          description: Newly created affiliation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Affiliation'
        default:
          description: Default error sample response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ZError"
      tags:
        - affiliations
  '/affiliations/:affiliationId':
    get:
      summary: get an affiliation
      description: ''
      operationId: getAffiliation
      responses:
        default:
          description: Default error sample response
      tags:
        - affiliations
    put:
      summary: Update an affiliation
      description: ''
      operationId: UpdateAffiliation
      responses:
        default:
          description: Default error sample response
      tags:
        - affiliations
    delete:
      summary: Delete an affiliation
      description: ''
      operationId: deleteAffiliation
      responses:
        default:
          description: Default error sample response
      tags:
        - affiliations

components:
  parameters:
    clubId:
      name: "clubId"
      schema:
        type: integer
      required: true
      in: path
      description: "Id of a club"
  schemas:
    club:
      required:
        - id
        - name
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        shortName:
          type: string
        logo:
          type: string
    clubForCreation:
      required:
        - name
      properties:
        name:
          type: string
        shortName:
          type: string
        logo:
          type: string
    clubForUpdate:
      properties:
        name:
          type: string
        shortName:
          type: string
        logo:
          type: string

    Affiliation:
      required:
        - id
        - associationName
      properties:
        id:
          type: integer
          format: int32
        associationName:
          type: string
        tag:
          type: string
        creationDate:
          type: string
          format: date-time
    Affiliations:
      type: array
      items:
        $ref: "#/components/schemas/Affiliation"
    ZError:
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
    AffiliationForCreation:
      properties:
        associationName:
          type: string
        creationDate:
          type: string
          format: date-time
        prefectureNumber:
          type: string
        siretNumber:
          type: string
        address:
          type: string
        postalCode:
          type: string
        city:
          type: string
        phoneNumber:
          type: string
        email:
          type: string
        webSite:
          type: string
        board:
          $ref: "#/components/schemas/BoardForCreation"

    BoardForCreation:
      properties:
        presidentName:
          type: string
        presidentGender:
          type: string
        TreasurerName:
          type: string
        TreasurerGender:
          type: string
        SecretaryName:
          type: string
        SecretaryGender:
          type: string
